





DROP FUNCTION IF EXISTS test_global_dict_python() ; 
CREATE FUNCTION test_global_dict_python()
RETURNS pcpatch
AS $$
import sys
sys.path.insert(0, '/media/sf_E_RemiCura/PROJETS/PPPP_utilities/pointcloud/') 
#del GD['rc']['schemas']['1'] 
# test on pcschema classe

#del GD['rc']['schemas']


if 'rc' not in GD:  # creating the rc dict if necessary
        GD['rc'] = dict()
if 'schemas' not in GD['rc']:  # creating the schemas dict if necessary
	GD['rc']['schemas'] = dict()

pcid = 6
npoints = 10

import pg_pointcloud_classes
reload(pg_pointcloud_classes)
#pg_pointcloud_classes.test_schema(GD['rc']['schemas'])
schem = pg_pointcloud_classes.get_schema(pcid, GD['rc']['schemas'],[])
import numpy as np
import random

random.seed(1)

points_double = np.zeros((npoints, schem.ndims), dtype=np.float64)
for i in range (0,npoints):
	for j in range(0,schem.ndims):
		points_double[i][j] = random.random()*10


wkb_patch = pg_pointcloud_classes.numpy_double_to_WKB_patch(
	points_double
	, pg_pointcloud_classes.get_schema(pcid, GD['rc']['schemas'], []) ) 

#plpy.notice(GD['rc']['schemas']) 
##testing the other way :
pcpatch

np_arr = pg_pointcloud_classes.WKB_patch_to_numpy_double(pcpatch, GD['rc']['schemas'], [])
plpy.notice(np_arr)


return wkb_patch 
$$ LANGUAGE plpythonu;


SELECT  test_global_dict_python() ;


SELECT patch
FROM acquisition_tmob_012013.riegl_pcpatch_space   
WHERE PC_NumPoints(patch) between 1000 and 1200
LIMIT 1 
 